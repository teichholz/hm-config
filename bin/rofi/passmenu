#!/usr/bin/env bash

# Prompts for a pass entry, then for a specific field. Similar to passmenu, but
# uses rofi, and can resume from a previous session.
#
# Example: passmenu [RESUME]

ROFI_CMD='rofi -dmenu -theme theme/passmenu.rasi'
MSG_CMD='notify-send'
PROG="bw"

# stupid obfuscation
EMAILPRE="tim.eichholz98"
EMAIL="$EMAILPRE@web.de"

set -e
shopt -s nullglob globstar

askpass () {
  zenity --password --title="sudo password prompt" --timeout=10
}

# checks if alle dependencies are there
for prog in xclip bw zenity; do
  if ! command -v "$prog" >/dev/null; then
    >&2 echo "$prog not installed, aborting"
    exit 1
  fi
done


SESSIONFILE="/tmp/.bwsession"

STATUS="$(bw status | jq '.status' | xargs)"
LOCKED="locked"
UNAUTH="unauthenticated"


if [ $STATUS == $UNAUTH ]; then
  [ -f $SESSIONFILE ] && rm $SESSIONFILE
fi

if [ $STATUS == $LOCKED ] && [ ! -f $SESSIONFILE ]; then
  PASS=$(askpass)
  SESSIONKEY=$(bw unlock "$PASS" --raw)
  echo $SESSIONKEY > $SESSIONFILE
elif [ $STATUS == $UNAUTH ]; then
  PASS=$(askpass)
  SESSIONKEY=$(bw login "$EMAIL" "$PASS" --raw)
  echo $SESSIONKEY > $SESSIONFILE
fi

# vault is unlocked
if [ -f $SESSIONFILE ]; then
  SESSIONKEY="$(cat $SESSIONFILE)"
fi

export BW_SESSION=$SESSIONKEY

_do_rofi() {
  # remove unwanted quotes with tr
  NAME=$(bw list items | jq '.[] | .name' | tr -d '"' | $ROFI_CMD)
  # get last field with special awk register NF
  bw get password $NAME | awk '{print $NF}'
}

PASS=$(_do_rofi)

if [ -n $PASS ]; then
  $MSG_CMD "Success!" "Password has been copied to clipboard"
  echo $PASS | xclip -selection clipboard -in
else
  $MSG_CMD "Error!" "Failed to retrieve password"
fi
